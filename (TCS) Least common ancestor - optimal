class Node
{
    int key;
    Node left;
    Node right;
    Node(int key)
    {
      this.key=key;
      left=null;
      right=null;
    }
}
public class Main
{
    static Node Traversal(Node root,int k1,int k2)
    {
        if(root==null)
        {
            return null;
        }
        if(root.key==k1 || root.key==k2)
        {
            return root;
        }
        Node left=Traversal(root.left,k1,k2);
        Node right=Traversal(root.right,k1,k2);
        if(left!=null && right!=null)
        {
            return root;
        }
        return left!=null? left:right;
       
        }
	public static void main(String[] args) {
	 Node n = new Node(5);
	    n.left = new Node (10);
	    n.right = new Node (15);
	    n.left.left = new Node (20);
	    n.left.right = new Node (25);
	    n.right.left = new Node (30);
	    n.right.left.left = new Node (50);
	    n.right.left.right = new Node (60);
	    n.right.left.right.right = new Node (80);
	    n.right.right = new Node (35);
	    n.right.right.right = new Node (40);
	    System.out.println("LCA : "+Traversal(n,30,35).key);
	}
}
